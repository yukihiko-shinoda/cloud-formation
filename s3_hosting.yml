# S3 hosting.
# CloudFront distribution is standard equipment.
# @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-s3.html
# @see https://qiita.com/okubot55/items/8290b6c1f59efcff1cb9
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AcmCertificateArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Key name of 
  ProjectName:
    Type: String
    Description: Project(Service) name (lower-kebab-case)
    AllowedPattern: '[a-z0-9\-]*'
  StackNameHostedZone:
    Type: String
    Description: Stack name of hosted zone (lower-kebab-case)
    AllowedPattern: '[a-z0-9\-]*'
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      # see: https://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html
      # > These bucket names must exactly match your domain name.
      BucketName:
        Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}:prd-hosting-${AWS::AccountId}"
        - Key: Project
          Value: !Ref ProjectName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
          - Action: ["s3:GetObject"]
            Effect: Allow
            Principal: "*"
            Resource: !Sub "arn:aws:s3:::${Bucket}/*"
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
        - Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
        - Fn::Sub:
          - www.${Domain}
          - Domain:
              Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName: !Sub
                - "${Domain}.s3-website-${AWS::Region}.amazonaws.com"
                - Domain:
                    Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
            Id: !Sub
                - "S3-${Domain}"
                - Domain:
                    Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          CachedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId:
            !Sub
              - "S3-${Domain}"
              - Domain:
                  Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016
          AcmCertificateArn: !Ref AcmCertificateArn
        HttpVersion: http2
        Enabled: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}:prd-hosting-${AWS::AccountId}"
        - Key: Project
          Value: !Ref ProjectName
  DNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId:
        Fn::ImportValue: !Sub "${StackNameHostedZone}-HostedZoneID" 
      Comment: Zone apex alias.
      RecordSets:
      - Name:
          Fn::ImportValue: !Sub "${StackNameHostedZone}-DomainName"
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt CloudFrontDistribution.DomainName
Outputs:
  BucketName:
    Value: !Ref Bucket
  WebsiteURL:
    Value: !GetAtt Bucket.WebsiteURL
  DistributionID:
    Value: !Ref CloudFrontDistribution
  DomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
